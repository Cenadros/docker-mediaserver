version: "3.4"

services:
  qbittorrent:
    image: linuxserver/qbittorrent:14.2.5.99202004250119-7015-2c65b79ubuntu18.04.1-ls93
    restart: unless-stopped
    hostname: qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022
      - WEBUI_PORT=8988
    volumes:
      - ./config/qbittorrent:/config
      - ./downloads:/downloads
    ports:
      - 6881:6881
      - 8988:8988
    labels:
      traefik.http.routers.torrent.rule: Host(`torrent.$DOMAIN_NAME`, `torrent.localhost`)
      traefik.http.services.torrent.loadbalancer.server.port: 8988
      traefik.http.routers.torrent.middlewares: traefik-forward-auth      

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    hostname: jackett
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./config/timezone:/etc/localtime:ro
      - ./downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ./config/jackett:/config # config files
    ports:
      - 9117:9117
    labels:
      traefik.http.routers.jackett.rule: Host(`jackett.$DOMAIN_NAME`, `jackett.localhost`)
      traefik.http.services.jackett.loadbalancer.server.port: 9117
      traefik.http.routers.jackett.middlewares: traefik-forward-auth      

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:preview
    restart: unless-stopped
    hostname: sonarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./config/timezone:/etc/localtime:ro
      - ./config/sonarr:/config # config files
      - ./downloads/complete/tv:/tv # tv shows folder
      - ./downloads/complete/anime:/anime # tv shows folder
      - ./downloads:/downloads # download folder
    ports:
      - 8989:8989
    labels:
      traefik.http.routers.sonarr.rule: Host(`sonarr.$DOMAIN_NAME`, `sonarr.localhost`)
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      traefik.http.routers.sonarr.middlewares: traefik-forward-auth      

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    hostname: radarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./config/timezone:/etc/localtime:ro
      - ./config/radarr:/config # config files
      - ./downloads/complete/movies:/movies # movies folder
      - ./downloads:/downloads # download folder
    ports:
      - 7878:7878
    labels:
      traefik.http.routers.radarr.rule: Host(`radarr.$DOMAIN_NAME`, `radarr.localhost`)
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      traefik.http.routers.radarr.middlewares: traefik-forward-auth      

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    restart: unless-stopped
    hostname: bazarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - ./config/bazarr:/config # config files
      - ./downloads/complete/movies:/movies # movies folder
      - ./downloads/complete/tv:/tv # tv shows folder
      - ./downloads/complete/anime:/anime # anime shows folder
    ports:
      - 6767:6767
    labels:
      traefik.http.routers.bazarr.rule: Host(`bazarr.$DOMAIN_NAME`, `bazarr.localhost`)
      traefik.http.services.bazarr.loadbalancer.server.port: 6767
      traefik.http.routers.bazarr.middlewares: traefik-forward-auth

  organizr:
    image: organizr/organizr
    container_name: organizr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./config/organizr:/config
    ports:
      - 9983:80
    restart: unless-stopped
    labels:
      traefik.http.routers.organizr.rule: Host(`julastorrent.com`, `localhost`)
      traefik.http.services.organizr.loadbalancer.server.port: 80
      traefik.http.routers.organizr.middlewares: traefik-forward-auth

  plex:
    image: linuxserver/plex:latest
    container_name: plex
    hostname: plex
    restart: unless-stopped
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - VERSION=docker
    volumes:
      - ./config/plex:/config
      - ./downloads/complete/tv:/tv
      - ./downloads/complete/movies:/movies
      - ./downloads/complete/anime:/anime
    ports:
      - 32400:32400
    labels:
      traefik.http.routers.plex.rule: Host(`plex.$DOMAIN_NAME`, `plex.localhost`)
      traefik.http.services.plex.loadbalancer.server.port: 32400
      traefik.http.routers.plex.middlewares: traefik-forward-auth

  ombi:
    image: linuxserver/ombi:latest
    restart: unless-stopped
    container_name: ombi
    hostname: ombi
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./config/ombi:/config
    ports:
      - 3579:3579
    labels:
      traefik.http.routers.ombi.rule: Host(`ombi.$DOMAIN_NAME`, `ombi.localhost`)
      traefik.http.services.ombi.loadbalancer.server.port: 3579
      traefik.http.routers.ombi.middlewares: traefik-forward-auth

  calibre:
    image: linuxserver/calibre-web:0.6.7-ls64
    container_name: calibre
    hostname: calibre
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - DOCKER_MODS=linuxserver/calibre-web:calibre
    volumes:
      - ./config/calibre:/config
      - ./downloads/complete/books:/books
    ports:
      - 8093:8083
    restart: unless-stopped
    labels:
      traefik.http.routers.calibre.rule: Host(`calibre.$DOMAIN_NAME`, `calibre.localhost`)
      traefik.http.services.calibre.loadbalancer.server.port: 8083
      traefik.http.routers.calibre.middlewares: traefik-forward-auth

  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    hostname: portainer
    restart: unless-stopped
    ports:
      - 9050:9000
      - 8000:8000
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
      - ./config/portainer:/data
    labels:      
      traefik.http.routers.portainer.rule: Host(`portainer.$DOMAIN_NAME`, `portainer.localhost`)
      traefik.http.services.portainer.loadbalancer.server.port: 9000      
      traefik.http.routers.portainer.middlewares: traefik-forward-auth

  traefik:
    image: traefik:v2.3
    container_name: traefik
    command:
      - --log.level=INFO
      #- --api.insecure=true
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --api=true
      - --api.dashboard=true
    restart: unless-stopped
    ports:
      - "80:80"
      - "8084:8080"
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.http.routers.dash.rule: Host(`dash.$DOMAIN_NAME`, `dash.localhost`)
      traefik.http.routers.dash.service: api@internal    
      traefik.http.routers.dash.middlewares: traefik-forward-auth

  cloudflare-ddns:
    image: oznu/cloudflare-ddns
    restart: unless-stopped
    container_name: cloudflare
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env    
      - API_KEY=${CLOUDFLARE_API}
      - ZONE=${DOMAIN_NAME} 
      - PROXIED=true

  cloudflare-companion:
    image: tiredofit/traefik-cloudflare-companion
    restart: unless-stopped
    container_name: cloudflare-companion
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - TRAEFIK_VERSION=2
      - CF_TOKEN=${CLOUDFLARE_API}
      - TARGET_DOMAIN=${DOMAIN_NAME}
      - DOMAIN1=${DOMAIN_NAME}
      - DOMAIN1_ZONE_ID=${CLOUDFLARE_ZONE_ID}
      - DOMAIN1_PROXIED=TRUE
      #- DOCKER_HOST=tcp://198.51.100.32:2376
      #- DOCKER_CERT_PATH=/docker-certs
      #- DOCKER_TLS_VERIFY=1

  oauth:
    container_name: oauth
    restart: unless-stopped
    image: thomseddon/traefik-forward-auth:2
    environment:
      - PROVIDERS_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - PROVIDERS_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SECRET=${OAUTH_SECRET}
      - INSECURE_COOKIE=true # Example assumes no https, do not use in production      
      - AUTH_HOST=oauth.${DOMAIN_NAME}
      - URL_PATH=/_oauth      
      - LIFETIME=86400 # 1 day      
      - COOKIE_DOMAIN=${DOMAIN_NAME}
      - DEFAULT_ACTION=auth
      - DEFAULT_PROVIDER=google
      - LOG_LEVEL=trace
    security_opt:
      - no-new-privileges:true    
    command: 
      --rule.torrent.action=allow --rule.torrent.rule="(Host(`torrent.$DOMAIN_NAME`) && PathPrefix(`/api`)) || Host(`torrent.localhost`)"
      --rule.sonarr.action=allow --rule.sonarr.rule="(Host(`sonarr.$DOMAIN_NAME`) && PathPrefix(`/api`)) || Host(`sonarr.localhost`)"
      --rule.bazarr.action=allow --rule.bazarr.rule="(Host(`bazarr.$DOMAIN_NAME`) && PathPrefix(`/api`)) || Host(`bazarr.localhost`)"
      --rule.radarr.action=allow --rule.radarr.rule="(Host(`radarr.$DOMAIN_NAME`) && PathPrefix(`/api`)) || Host(`radarr.localhost`)"
      --rule.jackett.action=allow --rule.jackett.rule="(Host(`jackett.$DOMAIN_NAME`) && PathPrefix(`/api`)) || Host(`jackett.localhost`)"
      --rule.muximux.action=allow --rule.muximux.rule="Host(`localhost`)"
      --rule.plex.action=allow --rule.plex.rule="Host(`plex.localhost`)"
      --rule.ombi.action=allow --rule.ombi.rule="Host(`ombi.localhost`)"
      --rule.calibre.action=allow --rule.calibre.rule="Host(`calibre.localhost`)"
      --rule.portainer.action=allow --rule.portainer.rule="Host(`portainer.localhost`)"
      --rule.traefik.action=allow --rule.traefik.rule="Host(`traefik.localhost`)"
      --whitelist=${MY_EMAIL} --whitelist=${MY_EMAIL2} --whitelist=${MY_EMAIL3}
    labels:
      traefik.http.middlewares.traefik-forward-auth.forwardauth.address: http://oauth:4181
      traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders: X-Forwarded-User      
      traefik.http.middlewares.traefik-no-auth.chain.middlewares:
      traefik.http.services.oauth.loadbalancer.server.port: 4181
      traefik.http.routers.oauth.rule: Host(`oauth.$DOMAIN_NAME`)
      traefik.http.routers.oauth.middlewares: traefik-forward-auth    

        


